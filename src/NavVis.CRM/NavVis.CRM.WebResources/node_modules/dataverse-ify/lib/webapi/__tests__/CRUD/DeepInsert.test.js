"use strict";
var __awaiter = (this && this.__awaiter) || function (thisArg, _arguments, P, generator) {
    function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }
    return new (P || (P = Promise))(function (resolve, reject) {
        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }
        function rejected(value) { try { step(generator["throw"](value)); } catch (e) { reject(e); } }
        function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }
        step((generator = generator.apply(thisArg, _arguments || [])).next());
    });
};
Object.defineProperty(exports, "__esModule", { value: true });
/* eslint-disable @typescript-eslint/no-explicit-any */
const SetupGlobalContext_1 = require("../../SetupGlobalContext");
describe("XrmWebApiNode CRUD", () => {
    beforeAll(() => __awaiter(void 0, void 0, void 0, function* () {
        // Is this running inside NodeJS?
        if (typeof Xrm === "undefined") {
            try {
                // Set up the Node Xrm global context
                yield SetupGlobalContext_1.SetupGlobalContext();
            }
            catch (ex) {
                fail(ex);
            }
        }
    }), 30000);
    test("Deep insert", () => __awaiter(void 0, void 0, void 0, function* () {
        const account = {
            name: "Sample Account",
            // eslint-disable-next-line @typescript-eslint/camelcase
            contact_customer_accounts: [
                {
                    firstname: "Sample",
                    lastname: "contact 1",
                },
                {
                    firstname: "Sample",
                    lastname: "Contact 2",
                },
            ],
        };
        try {
            // Create Account & Contacts
            account.accountid = (yield Xrm.WebApi.createRecord("account", account)).id;
            if (!account.accountid)
                throw new Error("Account not created");
            const accountCreated = yield Xrm.WebApi.retrieveRecord("account", account.accountid, "?$select=name&$expand=contact_customer_accounts($select=firstname,lastname)");
            expect(accountCreated.contact_customer_accounts.length).toBe(2);
        }
        finally {
            // Delete account
            if (account.accountid) {
                yield Xrm.WebApi.deleteRecord("account", account.accountid);
            }
        }
    }), 30000);
});
//# sourceMappingURL=DeepInsert.test.js.map