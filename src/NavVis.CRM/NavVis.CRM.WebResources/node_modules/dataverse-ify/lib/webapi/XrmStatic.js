"use strict";
var __awaiter = (this && this.__awaiter) || function (thisArg, _arguments, P, generator) {
    function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }
    return new (P || (P = Promise))(function (resolve, reject) {
        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }
        function rejected(value) { try { step(generator["throw"](value)); } catch (e) { reject(e); } }
        function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }
        step((generator = generator.apply(thisArg, _arguments || [])).next());
    });
};
Object.defineProperty(exports, "__esModule", { value: true });
exports.XrmStatic = void 0;
const WebApiStatic_1 = require("./WebApiStatic");
const XrmUtilityStatic_1 = require("./XrmUtilityStatic");
class XrmStatic {
    static createInstance(config) {
        return __awaiter(this, void 0, void 0, function* () {
            if (!XrmStatic.xrmInstance) {
                XrmStatic.webapiInstance = new WebApiStatic_1.WebApiStatic();
                XrmStatic.xrmInstance = new XrmStatic();
                XrmStatic.xrmInstance.WebApi = XrmStatic.webapiInstance;
                XrmStatic.xrmInstance.Utility = new XrmUtilityStatic_1.NodeXrmUtilityStatic();
                if (config.server) {
                    yield XrmStatic.webapiInstance.authoriseWithCdsAuthToken(config.server.host, config.server.version);
                }
                else {
                    throw new Error("config.server not configured");
                }
            }
            return XrmStatic.xrmInstance;
        });
    }
    static getGlobalContext() {
        return XrmStatic.xrmGlobalContext;
    }
}
exports.XrmStatic = XrmStatic;
//# sourceMappingURL=XrmStatic.js.map