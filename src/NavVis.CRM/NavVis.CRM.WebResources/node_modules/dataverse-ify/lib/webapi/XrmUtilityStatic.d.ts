/// <reference types="xrm" />
export declare class NodeXrmUtilityStatic implements Xrm.Utility {
    getLearningPathAttributeName(): string;
    getPageContext(): Xrm.PageContext;
    closeProgressIndicator(): void;
    getAllowedStatusTransitions(_entityName: string, _stateCode: number): Xrm.Async.PromiseLike<any>;
    getEntityMetadata(entityName: string, attributes?: string[]): Xrm.Async.PromiseLike<Xrm.Metadata.EntityMetadata>;
    getGlobalContext(): Xrm.GlobalContext;
    getResourceString(_webResourceName: string, _key: string): string;
    invokeProcessAction(_name: string, _parameters: Xrm.Collection.Dictionary<any>): Xrm.Async.PromiseLike<any>;
    lookupObjects(_lookupOptions: Xrm.LookupOptions): Xrm.Async.PromiseLike<Xrm.LookupValue[]>;
    refreshParentGrid(_lookupOptions: Xrm.LookupValue): void;
    showProgressIndicator(_message: string): void;
    alertDialog(_message: string, _onCloseCallback: () => void): void;
    confirmDialog(_message: string, _yesCloseCallback: () => void, _noCloseCallback: () => void): void;
    isActivityType(_entityType: string): boolean;
    openQuickCreate(_entityLogicalName: string, _createFromEntity?: Xrm.LookupValue, _parameters?: Xrm.Utility.OpenParameters): Xrm.Async.PromiseLike<Xrm.Async.OpenQuickCreateSuccessCallbackObject>;
    openEntityForm(_name: string, _id?: string, _parameters?: Xrm.Utility.FormOpenParameters, _windowOptions?: Xrm.Utility.WindowOptions): void;
    openWebResource(_webResourceName: string, _webResourceData?: string, _width?: number, _height?: number): Window;
}
