"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
exports.getEntityMetadataFromRecord = void 0;
const MetadataCache_1 = require("./MetadataCache");
const NullOrUndefined_1 = require("../webapi/utils/NullOrUndefined");
function getEntityMetadataFromRecord(entityRecord, logicalName) {
    let entityMetadata;
    const actionPrefix = "Microsoft.Dynamics.CRM.";
    entityRecord.logicalName = entityRecord.logicalName || logicalName; // allow passing the logical name rather than using the @odata.context
    if (NullOrUndefined_1.isNullOrUndefined(entityRecord.logicalName)) {
        // Get the @data.context to get the logical name
        // E.g. https://org.crm11.dynamics.com/api/data/v9.0/$metadata#accounts(name,parentaccountid)/$entity
        const odatacontext = entityRecord["@odata.context"];
        const contextRegex = /\$metadata#([\w.]*)(\([\w()]*\))?(\/\$entity)?/g;
        const match = contextRegex.exec(odatacontext);
        if (match != null && match.length > 1) {
            const entitySetName = match[1];
            if (entitySetName.startsWith(actionPrefix)) {
                const actionName = entitySetName.substring(actionPrefix.length);
                entityMetadata = MetadataCache_1.getMetadataByLogicalName(actionName);
                if (entityMetadata != null) {
                    entityRecord.logicalName = entityMetadata.logicalName;
                }
            }
            else {
                // Find the logical name from the entity set name
                entityMetadata = MetadataCache_1.getMetadataFromEntitySet(entitySetName);
                entityRecord.logicalName = entityMetadata.logicalName;
            }
        }
        else {
            throw new Error("Cannot find the odata.context to get the logical name");
        }
    }
    else {
        // Get metadata
        entityMetadata = MetadataCache_1.getMetadataByLogicalName(entityRecord.logicalName);
    }
    return entityMetadata;
}
exports.getEntityMetadataFromRecord = getEntityMetadataFromRecord;
//# sourceMappingURL=getEntityMetadataFromRecord.js.map