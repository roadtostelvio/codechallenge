"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
exports.fromEntityReference = exports.toEntityReference = exports.EntityReference = void 0;
const MetadataCache_1 = require("../metadata/MetadataCache");
class EntityReference {
    constructor(logicalName, id, name) {
        this.entityType = logicalName;
        this.id = id;
        this.name = name;
    }
}
exports.EntityReference = EntityReference;
function toEntityReference(record) {
    let id = record.id;
    // Set the id field if not already
    if (id === undefined || id === null) {
        const metadata = MetadataCache_1.getMetadata(record);
        id = record[metadata.primaryIdAttribute];
    }
    return {
        id: id,
        entityType: record.logicalName,
    };
}
exports.toEntityReference = toEntityReference;
function fromEntityReference(record, entityReference) {
    if (record.logicalName !== entityReference.entityType)
        throw new Error(`Cannot map ${entityReference.entityType} into ${record.logicalName}`);
    record.id = entityReference.id;
}
exports.fromEntityReference = fromEntityReference;
//# sourceMappingURL=EntityReference.js.map