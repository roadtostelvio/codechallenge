/// <reference types="xrm" />
import { IEntity } from "../../types/IEntity";
import { EntityCollection } from "../../types/EntityCollection";
import { Guid } from "../../types/Guid";
import { EntityReference } from "../../types/EntityReference";
import { CdsServiceClient } from "./CdsServiceClient";
import { WebApiExecuteRequest } from "../../types/WebApiExecuteRequest";
export declare class XrmContextCdsServiceClient implements CdsServiceClient {
    _webApi: Xrm.WebApi;
    constructor(webApi: Xrm.WebApi);
    create(entity: IEntity): Promise<string>;
    update(entity: IEntity): Promise<void>;
    delete(entity: string | IEntity): Promise<void>;
    delete(entityName: string, id: Guid): Promise<void>;
    retrieve<T extends IEntity>(entityName: string, id: Guid, columnSet: string[] | boolean): Promise<T>;
    private getEntityLogicalNameFromFetch;
    retrieveMultiple<T extends IEntity>(fetchxml: string): Promise<EntityCollection<T>>;
    associate(_entityName: string, _entityId: string, _relationship: string, _relatedEntities: Promise<EntityReference[]>): Promise<void>;
    disassociate(_entityName: string, _entityId: string, _relationship: string, _relatedEntities: EntityReference[]): Promise<void>;
    execute(request: WebApiExecuteRequest): Promise<unknown>;
}
