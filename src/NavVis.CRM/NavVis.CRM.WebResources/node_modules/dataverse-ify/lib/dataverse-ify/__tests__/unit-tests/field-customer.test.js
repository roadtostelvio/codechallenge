"use strict";
var __awaiter = (this && this.__awaiter) || function (thisArg, _arguments, P, generator) {
    function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }
    return new (P || (P = Promise))(function (resolve, reject) {
        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }
        function rejected(value) { try { step(generator["throw"](value)); } catch (e) { reject(e); } }
        function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }
        step((generator = generator.apply(thisArg, _arguments || [])).next());
    });
};
Object.defineProperty(exports, "__esModule", { value: true });
/* eslint-disable @typescript-eslint/camelcase */
const metadata_1 = require("../../../metadata");
const odataify_1 = require("../../odataify/odataify");
const __1 = require("../../..");
const Opportunity_1 = require("../../../dataverse-gen/entities/Opportunity");
const Account_1 = require("../../../dataverse-gen/entities/Account");
test("odataify customer lookups", () => __awaiter(void 0, void 0, void 0, function* () {
    metadata_1.setMetadataCache({
        entities: { opportunity: Opportunity_1.opportunityMetadata, account: Account_1.accountMetadata },
    });
    const sdkEntity = {
        logicalName: Opportunity_1.opportunityMetadata.logicalName,
        customerid: new __1.EntityReference("account", "123"),
    };
    const odataEntity = yield odataify_1.odataify("Create", sdkEntity);
    expect(odataEntity).toBeDefined();
    const expectedOdata = {
        "@odata.type": "Microsoft.Dynamics.CRM.opportunity",
        "customerid_account@odata.bind": "accounts(123)",
    };
    expect(JSON.stringify(odataEntity)).toBe(JSON.stringify(expectedOdata));
}));
test("sdkify lookups", () => __awaiter(void 0, void 0, void 0, function* () {
    metadata_1.setMetadataCache({ entities: { opportunity: Opportunity_1.opportunityMetadata } });
    const recordOdata = {
        "@odata.context": "https://develop1v9demo.crm11.dynamics.com/api/data/v9.1/$metadata#opportunities(_customerid_value)/$entity",
        // eslint-disable-next-line quotes
        "@odata.etag": 'W/"24587791"',
        "_customerid_value@OData.Community.Display.V1.FormattedValue": "Test Unit",
        "_customerid_value@Microsoft.Dynamics.CRM.associatednavigationproperty": "customerid_contact",
        "_customerid_value@Microsoft.Dynamics.CRM.lookuplogicalname": "contact",
        _customerid_value: "3191b1c8-4c85-ea11-a812-000d3a7f4cf5",
        opportunityid: "0faa41b7-4c85-ea11-a811-00224801badc",
    };
    const sdkRecord = yield __1.sdkify(recordOdata, "opportunity");
    const expected = {
        opportunityid: "0faa41b7-4c85-ea11-a811-00224801badc",
        logicalName: "opportunity",
        formattedValues: {
            _customerid_value: "Test Unit",
        },
        customerid: {
            entityType: "contact",
            id: "3191b1c8-4c85-ea11-a812-000d3a7f4cf5",
            name: "Test Unit",
        },
    };
    expect(JSON.stringify(sdkRecord)).toBe(JSON.stringify(expected));
}));
//# sourceMappingURL=field-customer.test.js.map