"use strict";
var __awaiter = (this && this.__awaiter) || function (thisArg, _arguments, P, generator) {
    function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }
    return new (P || (P = Promise))(function (resolve, reject) {
        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }
        function rejected(value) { try { step(generator["throw"](value)); } catch (e) { reject(e); } }
        function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }
        step((generator = generator.apply(thisArg, _arguments || [])).next());
    });
};
Object.defineProperty(exports, "__esModule", { value: true });
const Contact_1 = require("../../../dataverse-gen/entities/Contact");
const metadata_1 = require("../../../metadata");
const __1 = require("../..");
test("update removes primary ID attribute", () => __awaiter(void 0, void 0, void 0, function* () {
    metadata_1.setMetadataCache({ entities: { contact: Contact_1.contactMetadata } });
    const sdkRecord = {
        logicalName: Contact_1.contactMetadata.logicalName,
        contactid: "1234",
        lastname: "Test",
        lastonholdtime: new Date(),
    };
    const odataRecord = yield __1.odataify("Update", sdkRecord);
    expect(odataRecord.contactid).toBeUndefined();
}));
//# sourceMappingURL=update.test.js.map