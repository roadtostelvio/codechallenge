export declare const Entities: {
    Account: string;
    Contact: string;
    Incident: string;
    Letter: string;
    Opportunity: string;
    OpportunityClose: string;
    Queue: string;
    QueueItem: string;
};
export declare const metadataCache: {
    entities: {
        account: {
            typeName: string;
            logicalName: string;
            collectionName: string;
            primaryIdAttribute: string;
            attributeTypes: {
                address1_latitude: string;
                address1_longitude: string;
                address1_utcoffset: string;
                address2_latitude: string;
                address2_longitude: string;
                address2_utcoffset: string;
                aging30: string;
                aging30_base: string;
                aging60: string;
                aging60_base: string;
                aging90: string;
                aging90_base: string;
                creditlimit: string;
                creditlimit_base: string;
                entityimage_timestamp: string;
                exchangerate: string;
                importsequencenumber: string;
                marketcap: string;
                marketcap_base: string;
                numberofemployees: string;
                onholdtime: string;
                opendeals: string;
                opendeals_state: string;
                openrevenue: string;
                openrevenue_base: string;
                openrevenue_state: string;
                revenue: string;
                revenue_base: string;
                sharesoutstanding: string;
                teamsfollowed: string;
                timezoneruleversionnumber: string;
                utcconversiontimezonecode: string;
                versionnumber: string;
                accountcategorycode: string;
                accountclassificationcode: string;
                accountratingcode: string;
                address1_addresstypecode: string;
                address1_freighttermscode: string;
                address1_shippingmethodcode: string;
                address2_addresstypecode: string;
                address2_freighttermscode: string;
                address2_shippingmethodcode: string;
                businesstypecode: string;
                cdsify_multiselect: string;
                customersizecode: string;
                customertypecode: string;
                industrycode: string;
                ownershipcode: string;
                paymenttermscode: string;
                preferredappointmentdaycode: string;
                preferredappointmenttimecode: string;
                preferredcontactmethodcode: string;
                shippingmethodcode: string;
                statecode: string;
                statuscode: string;
                territorycode: string;
                createdon: string;
                lastonholdtime: string;
                lastusedincampaign: string;
                modifiedon: string;
                opendeals_date: string;
                openrevenue_date: string;
                overriddencreatedon: string;
            };
            navigation: {
                transactioncurrencyid: string[];
                territoryid: string[];
                stageid_processstage: string[];
                sla_account_sla: string[];
                primarycontactid: string[];
                preferredsystemuserid: string[];
                preferredserviceid: string[];
                preferredequipmentid: string[];
                parentaccountid: string[];
                owninguser: string[];
                owningteam: string[];
                owningbusinessunit: string[];
                ownerid: string[];
                originatingleadid: string[];
                msdyn_accountkpiid: string[];
                modifiedonbehalfby: string[];
                modifiedby: string[];
                masterid: string[];
                defaultpricelevelid: string[];
                createdonbehalfby: string[];
                createdby: string[];
                cdsify_Account1: string[];
                slainvokedid: string[];
            };
        };
        contact: {
            typeName: string;
            logicalName: string;
            collectionName: string;
            primaryIdAttribute: string;
            attributeTypes: {
                address1_latitude: string;
                address1_longitude: string;
                address1_utcoffset: string;
                address2_latitude: string;
                address2_longitude: string;
                address2_utcoffset: string;
                address3_latitude: string;
                address3_longitude: string;
                address3_utcoffset: string;
                aging30: string;
                aging30_base: string;
                aging60: string;
                aging60_base: string;
                aging90: string;
                aging90_base: string;
                annualincome: string;
                annualincome_base: string;
                creditlimit: string;
                creditlimit_base: string;
                entityimage_timestamp: string;
                exchangerate: string;
                importsequencenumber: string;
                numberofchildren: string;
                onholdtime: string;
                teamsfollowed: string;
                timezoneruleversionnumber: string;
                utcconversiontimezonecode: string;
                versionnumber: string;
                accountrolecode: string;
                address1_addresstypecode: string;
                address1_freighttermscode: string;
                address1_shippingmethodcode: string;
                address2_addresstypecode: string;
                address2_freighttermscode: string;
                address2_shippingmethodcode: string;
                address3_addresstypecode: string;
                address3_freighttermscode: string;
                address3_shippingmethodcode: string;
                customersizecode: string;
                customertypecode: string;
                educationcode: string;
                familystatuscode: string;
                gendercode: string;
                haschildrencode: string;
                leadsourcecode: string;
                msdyn_orgchangestatus: string;
                paymenttermscode: string;
                preferredappointmentdaycode: string;
                preferredappointmenttimecode: string;
                preferredcontactmethodcode: string;
                shippingmethodcode: string;
                statecode: string;
                statuscode: string;
                territorycode: string;
                anniversary: string;
                birthdate: string;
                createdon: string;
                lastonholdtime: string;
                lastusedincampaign: string;
                modifiedon: string;
                overriddencreatedon: string;
            };
            navigation: {
                transactioncurrencyid: string[];
                stageid_processstage: string[];
                sla_contact_sla: string[];
                preferredsystemuserid: string[];
                preferredserviceid: string[];
                preferredequipmentid: string[];
                owninguser: string[];
                owningteam: string[];
                owningbusinessunit: string[];
                ownerid: string[];
                originatingleadid: string[];
                msdyn_contactkpiid: string[];
                modifiedonbehalfby: string[];
                modifiedby: string[];
                masterid: string[];
                defaultpricelevelid: string[];
                createdonbehalfby: string[];
                createdby: string[];
                parentcustomerid: string[];
                slainvokedid: string[];
            };
        };
        incident: {
            typeName: string;
            logicalName: string;
            collectionName: string;
            primaryIdAttribute: string;
            attributeTypes: {
                actualserviceunits: string;
                billedserviceunits: string;
                entityimage_timestamp: string;
                exchangerate: string;
                importsequencenumber: string;
                influencescore: string;
                numberofchildincidents: string;
                onholdtime: string;
                sentimentvalue: string;
                timezoneruleversionnumber: string;
                utcconversiontimezonecode: string;
                versionnumber: string;
                caseorigincode: string;
                casetypecode: string;
                contractservicelevelcode: string;
                customersatisfactioncode: string;
                firstresponseslastatus: string;
                incidentstagecode: string;
                messagetypecode: string;
                prioritycode: string;
                resolvebyslastatus: string;
                servicestage: string;
                severitycode: string;
                statecode: string;
                statuscode: string;
                createdon: string;
                escalatedon: string;
                followupby: string;
                lastonholdtime: string;
                modifiedon: string;
                overriddencreatedon: string;
                resolveby: string;
                responseby: string;
            };
            navigation: {
                transactioncurrencyid: string[];
                subjectid: string[];
                stageid_processstage: string[];
                socialprofileid: string[];
                responsiblecontactid: string[];
                resolvebykpiid: string[];
                productid: string[];
                primarycontactid: string[];
                parentcaseid: string[];
                owninguser: string[];
                owningteam: string[];
                owningbusinessunit: string[];
                ownerid: string[];
                msdyn_IoTAlert: string[];
                modifiedonbehalfby: string[];
                modifiedby: string[];
                masterid: string[];
                kbarticleid: string[];
                firstresponsebykpiid: string[];
                existingcase: string[];
                entitlementid: string[];
                createdonbehalfby: string[];
                createdby: string[];
                contractid: string[];
                contractdetailid: string[];
                customerid: string[];
                slaid: string[];
                slainvokedid: string[];
            };
        };
        letter: {
            typeName: string;
            logicalName: string;
            collectionName: string;
            primaryIdAttribute: string;
            attributeTypes: {
                actualdurationminutes: string;
                exchangerate: string;
                importsequencenumber: string;
                onholdtime: string;
                scheduleddurationminutes: string;
                timezoneruleversionnumber: string;
                utcconversiontimezonecode: string;
                versionnumber: string;
                prioritycode: string;
                statecode: string;
                statuscode: string;
                actualend: string;
                actualstart: string;
                createdon: string;
                lastonholdtime: string;
                modifiedon: string;
                overriddencreatedon: string;
                scheduledend: string;
                scheduledstart: string;
                sortdate: string;
            };
            navigation: {
                stageid_processstage: string[];
                sla_letter_sla: string[];
                ownerid_letter: string[];
                activityid_activitypointer: string[];
                createdby: string[];
                createdonbehalfby: string[];
                modifiedby: string[];
                modifiedonbehalfby: string[];
                owningbusinessunit: string[];
                owningteam: string[];
                owninguser: string[];
                regardingobjectid: string[];
                serviceid: string[];
                slainvokedid: string[];
                transactioncurrencyid: string[];
            };
        };
        opportunity: {
            typeName: string;
            logicalName: string;
            collectionName: string;
            primaryIdAttribute: string;
            attributeTypes: {
                actualvalue: string;
                actualvalue_base: string;
                budgetamount: string;
                budgetamount_base: string;
                closeprobability: string;
                discountamount: string;
                discountamount_base: string;
                discountpercentage: string;
                estimatedvalue: string;
                estimatedvalue_base: string;
                exchangerate: string;
                freightamount: string;
                freightamount_base: string;
                importsequencenumber: string;
                msdyn_opportunityscore: string;
                onholdtime: string;
                teamsfollowed: string;
                timezoneruleversionnumber: string;
                totalamount: string;
                totalamount_base: string;
                totalamountlessfreight: string;
                totalamountlessfreight_base: string;
                totaldiscountamount: string;
                totaldiscountamount_base: string;
                totallineitemamount: string;
                totallineitemamount_base: string;
                totallineitemdiscountamount: string;
                totallineitemdiscountamount_base: string;
                totaltax: string;
                totaltax_base: string;
                utcconversiontimezonecode: string;
                versionnumber: string;
                budgetstatus: string;
                initialcommunication: string;
                msdyn_forecastcategory: string;
                msdyn_opportunitygrade: string;
                msdyn_opportunityscoretrend: string;
                need: string;
                opportunityratingcode: string;
                pricingerrorcode: string;
                prioritycode: string;
                purchaseprocess: string;
                purchasetimeframe: string;
                salesstage: string;
                salesstagecode: string;
                skippricecalculation: string;
                statecode: string;
                statuscode: string;
                timeline: string;
                actualclosedate: string;
                createdon: string;
                estimatedclosedate: string;
                finaldecisiondate: string;
                lastonholdtime: string;
                modifiedon: string;
                overriddencreatedon: string;
                schedulefollowup_prospect: string;
                schedulefollowup_qualify: string;
                scheduleproposalmeeting: string;
            };
            navigation: {
                transactioncurrencyid: string[];
                stageid_processstage: string[];
                sla_opportunity_sla: string[];
                pricelevelid: string[];
                parentcontactid: string[];
                parentaccountid: string[];
                owninguser: string[];
                owningteam: string[];
                owningbusinessunit: string[];
                ownerid: string[];
                originatingleadid: string[];
                msdyn_segmentid: string[];
                msdyn_opportunitykpiid: string[];
                msdyn_PredictiveScoreId: string[];
                modifiedonbehalfby: string[];
                modifiedby: string[];
                createdonbehalfby: string[];
                createdby: string[];
                campaignid: string[];
                customerid: string[];
                slainvokedid: string[];
            };
        };
        opportunityclose: {
            typeName: string;
            logicalName: string;
            collectionName: string;
            primaryIdAttribute: string;
            attributeTypes: {
                actualdurationminutes: string;
                actualrevenue: string;
                actualrevenue_base: string;
                exchangerate: string;
                importsequencenumber: string;
                onholdtime: string;
                scheduleddurationminutes: string;
                timezoneruleversionnumber: string;
                utcconversiontimezonecode: string;
                versionnumber: string;
                community: string;
                deliveryprioritycode: string;
                instancetypecode: string;
                opportunitystatecode: string;
                opportunitystatuscode: string;
                prioritycode: string;
                statecode: string;
                statuscode: string;
                actualend: string;
                actualstart: string;
                createdon: string;
                deliverylastattemptedon: string;
                lastonholdtime: string;
                modifiedon: string;
                overriddencreatedon: string;
                postponeactivityprocessinguntil: string;
                scheduledend: string;
                scheduledstart: string;
                senton: string;
                sortdate: string;
            };
            navigation: {
                sla_activitypointer_sla_opportunityclose: string[];
                ownerid_opportunityclose: string[];
                opportunityid: string[];
                competitorid: string[];
                activityid_activitypointer: string[];
                createdby: string[];
                createdonbehalfby: string[];
                modifiedby: string[];
                modifiedonbehalfby: string[];
                owningbusinessunit: string[];
                owningteam: string[];
                owninguser: string[];
                regardingobjectid: string[];
                sendermailboxid: string[];
                serviceid: string[];
                slainvokedid: string[];
                transactioncurrencyid: string[];
            };
        };
        queue: {
            typeName: string;
            logicalName: string;
            collectionName: string;
            primaryIdAttribute: string;
            attributeTypes: {
                entityimage_timestamp: string;
                exchangerate: string;
                importsequencenumber: string;
                numberofitems: string;
                numberofmembers: string;
                versionnumber: string;
                emailrouteraccessapproval: string;
                incomingemaildeliverymethod: string;
                incomingemailfilteringmethod: string;
                outgoingemaildeliverymethod: string;
                queuetypecode: string;
                queueviewtype: string;
                statecode: string;
                statuscode: string;
                createdon: string;
                modifiedon: string;
                overriddencreatedon: string;
            };
            navigation: {
                transactioncurrencyid: string[];
                primaryuserid: string[];
                owningbusinessunit: string[];
                ownerid: string[];
                organizationid: string[];
                modifiedonbehalfby: string[];
                modifiedby: string[];
                defaultmailbox: string[];
                createdonbehalfby: string[];
                createdby: string[];
                businessunitid: string[];
            };
        };
        queueitem: {
            typeName: string;
            logicalName: string;
            collectionName: string;
            primaryIdAttribute: string;
            attributeTypes: {
                exchangerate: string;
                importsequencenumber: string;
                priority: string;
                state: string;
                status: string;
                timezoneruleversionnumber: string;
                utcconversiontimezonecode: string;
                versionnumber: string;
                objecttypecode: string;
                statecode: string;
                statuscode: string;
                createdon: string;
                enteredon: string;
                modifiedon: string;
                overriddencreatedon: string;
                workeridmodifiedon: string;
            };
            navigation: {
                transactioncurrencyid: string[];
                queueid: string[];
                organizationid: string[];
                modifiedonbehalfby: string[];
                modifiedby: string[];
                createdonbehalfby: string[];
                createdby: string[];
                objectid: string[];
                workerid: string[];
            };
        };
    };
    actions: {
        AddToQueue: {
            boundParameter: string;
            parameterTypes: {
                entity: {
                    typeName: string;
                    structuralProperty: import("..").StructuralProperty;
                };
                Target: {
                    typeName: string;
                    structuralProperty: import("..").StructuralProperty;
                };
                SourceQueue: {
                    typeName: string;
                    structuralProperty: import("..").StructuralProperty;
                };
                QueueItemProperties: {
                    typeName: string;
                    structuralProperty: import("..").StructuralProperty;
                };
            };
            operationType: import("..").OperationType;
            operationName: string;
        };
        WinOpportunity: {
            parameterTypes: {
                OpportunityClose: {
                    typeName: string;
                    structuralProperty: import("..").StructuralProperty;
                };
                Caller: {
                    typeName: string;
                    structuralProperty: import("..").StructuralProperty;
                };
                Status: {
                    typeName: string;
                    structuralProperty: import("..").StructuralProperty;
                };
            };
            operationType: import("..").OperationType;
            operationName: string;
        };
        CalculateRollupField: {
            parameterTypes: {
                Target: {
                    typeName: string;
                    structuralProperty: import("..").StructuralProperty;
                };
                FieldName: {
                    typeName: string;
                    structuralProperty: import("..").StructuralProperty;
                };
            };
            operationType: import("..").OperationType;
            operationName: string;
        };
        CalculateTotalTimeIncident: {
            boundParameter: string;
            parameterTypes: {
                entity: {
                    typeName: string;
                    structuralProperty: import("..").StructuralProperty;
                };
            };
            operationType: import("..").OperationType;
            operationName: string;
        };
        RetrieveMetadataChanges: {
            parameterTypes: {
                Query: {
                    typeName: string;
                    structuralProperty: import("..").StructuralProperty;
                };
                DeletedMetadataFilters: {
                    typeName: string;
                    structuralProperty: import("..").StructuralProperty;
                };
                ClientVersionStamp: {
                    typeName: string;
                    structuralProperty: import("..").StructuralProperty;
                };
                AppModuleId: {
                    typeName: string;
                    structuralProperty: import("..").StructuralProperty;
                };
                RetrieveAllSettings: {
                    typeName: string;
                    structuralProperty: import("..").StructuralProperty;
                };
            };
            operationType: import("..").OperationType;
            operationName: string;
        };
    };
};
