import { IEntity } from "../../types/IEntity";
export declare const opportunitycloseMetadata: {
    typeName: string;
    logicalName: string;
    collectionName: string;
    primaryIdAttribute: string;
    attributeTypes: {
        actualdurationminutes: string;
        actualrevenue: string;
        actualrevenue_base: string;
        exchangerate: string;
        importsequencenumber: string;
        onholdtime: string;
        scheduleddurationminutes: string;
        timezoneruleversionnumber: string;
        utcconversiontimezonecode: string;
        versionnumber: string;
        community: string;
        deliveryprioritycode: string;
        instancetypecode: string;
        opportunitystatecode: string;
        opportunitystatuscode: string;
        prioritycode: string;
        statecode: string;
        statuscode: string;
        actualend: string;
        actualstart: string;
        createdon: string;
        deliverylastattemptedon: string;
        lastonholdtime: string;
        modifiedon: string;
        overriddencreatedon: string;
        postponeactivityprocessinguntil: string;
        scheduledend: string;
        scheduledstart: string;
        senton: string;
        sortdate: string;
    };
    navigation: {
        sla_activitypointer_sla_opportunityclose: string[];
        ownerid_opportunityclose: string[];
        opportunityid: string[];
        competitorid: string[];
        activityid_activitypointer: string[];
        createdby: string[];
        createdonbehalfby: string[];
        modifiedby: string[];
        modifiedonbehalfby: string[];
        owningbusinessunit: string[];
        owningteam: string[];
        owninguser: string[];
        regardingobjectid: string[];
        sendermailboxid: string[];
        serviceid: string[];
        slainvokedid: string[];
        transactioncurrencyid: string[];
    };
};
export declare enum OpportunityCloseAttributes {
    ActivityAdditionalParams = "activityadditionalparams",
    ActivityId = "activityid",
    ActivityTypeCode = "activitytypecode",
    ActualDurationMinutes = "actualdurationminutes",
    ActualEnd = "actualend",
    ActualRevenue = "actualrevenue",
    ActualRevenue_Base = "actualrevenue_base",
    ActualStart = "actualstart",
    BCC = "bcc",
    Category = "category",
    CC = "cc",
    Community = "community",
    CompetitorId = "competitorid",
    CompetitorIdName = "competitoridname",
    CompetitorIdYomiName = "competitoridyominame",
    CreatedBy = "createdby",
    CreatedByExternalParty = "createdbyexternalparty",
    CreatedByExternalPartyName = "createdbyexternalpartyname",
    CreatedByExternalPartyYomiName = "createdbyexternalpartyyominame",
    CreatedByName = "createdbyname",
    CreatedByYomiName = "createdbyyominame",
    CreatedOn = "createdon",
    CreatedOnBehalfBy = "createdonbehalfby",
    CreatedOnBehalfByName = "createdonbehalfbyname",
    CreatedOnBehalfByYomiName = "createdonbehalfbyyominame",
    Customers = "customers",
    DeliveryLastAttemptedOn = "deliverylastattemptedon",
    DeliveryPriorityCode = "deliveryprioritycode",
    Description = "description",
    ExchangeItemId = "exchangeitemid",
    ExchangeRate = "exchangerate",
    ExchangeWebLink = "exchangeweblink",
    From = "from",
    ImportSequenceNumber = "importsequencenumber",
    InstanceTypeCode = "instancetypecode",
    IsBilled = "isbilled",
    IsMapiPrivate = "ismapiprivate",
    IsRegularActivity = "isregularactivity",
    IsWorkflowCreated = "isworkflowcreated",
    LastOnHoldTime = "lastonholdtime",
    LeftVoiceMail = "leftvoicemail",
    ModifiedBy = "modifiedby",
    ModifiedByExternalParty = "modifiedbyexternalparty",
    ModifiedByExternalPartyName = "modifiedbyexternalpartyname",
    ModifiedByExternalPartyYomiName = "modifiedbyexternalpartyyominame",
    ModifiedByName = "modifiedbyname",
    ModifiedByYomiName = "modifiedbyyominame",
    ModifiedOn = "modifiedon",
    ModifiedOnBehalfBy = "modifiedonbehalfby",
    ModifiedOnBehalfByName = "modifiedonbehalfbyname",
    ModifiedOnBehalfByYomiName = "modifiedonbehalfbyyominame",
    OnHoldTime = "onholdtime",
    OpportunityId = "opportunityid",
    OpportunityIdName = "opportunityidname",
    OpportunityIdType = "opportunityidtype",
    OpportunityStateCode = "opportunitystatecode",
    OpportunityStatusCode = "opportunitystatuscode",
    OptionalAttendees = "optionalattendees",
    Organizer = "organizer",
    OverriddenCreatedOn = "overriddencreatedon",
    OwnerId = "ownerid",
    OwnerIdName = "owneridname",
    OwnerIdType = "owneridtype",
    OwnerIdYomiName = "owneridyominame",
    OwningBusinessUnit = "owningbusinessunit",
    OwningBusinessUnitName = "owningbusinessunitname",
    OwningTeam = "owningteam",
    OwningUser = "owninguser",
    Partners = "partners",
    PostponeActivityProcessingUntil = "postponeactivityprocessinguntil",
    PriorityCode = "prioritycode",
    ProcessId = "processid",
    RegardingObjectId = "regardingobjectid",
    RegardingObjectIdName = "regardingobjectidname",
    RegardingObjectIdYomiName = "regardingobjectidyominame",
    RegardingObjectTypeCode = "regardingobjecttypecode",
    RequiredAttendees = "requiredattendees",
    Resources = "resources",
    ScheduledDurationMinutes = "scheduleddurationminutes",
    ScheduledEnd = "scheduledend",
    ScheduledStart = "scheduledstart",
    SenderMailboxId = "sendermailboxid",
    SenderMailboxIdName = "sendermailboxidname",
    SentOn = "senton",
    SeriesId = "seriesid",
    ServiceId = "serviceid",
    ServiceIdName = "serviceidname",
    SLAId = "slaid",
    SLAInvokedId = "slainvokedid",
    SLAInvokedIdName = "slainvokedidname",
    SLAName = "slaname",
    SortDate = "sortdate",
    StageId = "stageid",
    StateCode = "statecode",
    StatusCode = "statuscode",
    Subcategory = "subcategory",
    Subject = "subject",
    TimeZoneRuleVersionNumber = "timezoneruleversionnumber",
    To = "to",
    TransactionCurrencyId = "transactioncurrencyid",
    TransactionCurrencyIdName = "transactioncurrencyidname",
    TraversedPath = "traversedpath",
    UTCConversionTimeZoneCode = "utcconversiontimezonecode",
    VersionNumber = "versionnumber"
}
export interface OpportunityClose extends IEntity {
    activityadditionalparams?: string | null;
    activityid?: import("../../types/Guid").Guid | null;
    activitytypecode?: string | null;
    actualdurationminutes?: number | null;
    actualend?: Date | null;
    actualrevenue?: number | null;
    actualrevenue_base?: number | null;
    actualstart?: Date | null;
    bcc?: import("../../types/ActivityParty").ActivityParty[] | null;
    category?: string | null;
    cc?: import("../../types/ActivityParty").ActivityParty[] | null;
    community?: import("../enums/socialprofile_community").socialprofile_community | null;
    competitorid?: import("../../types/EntityReference").EntityReference | null;
    competitoridname?: string | null;
    competitoridyominame?: string | null;
    createdby?: import("../../types/EntityReference").EntityReference | null;
    createdbyexternalparty?: import("../../types/EntityReference").EntityReference | null;
    createdbyexternalpartyname?: string | null;
    createdbyexternalpartyyominame?: string | null;
    createdbyname?: string | null;
    createdbyyominame?: string | null;
    createdon?: Date | null;
    createdonbehalfby?: import("../../types/EntityReference").EntityReference | null;
    createdonbehalfbyname?: string | null;
    createdonbehalfbyyominame?: string | null;
    customers?: import("../../types/ActivityParty").ActivityParty[] | null;
    deliverylastattemptedon?: Date | null;
    deliveryprioritycode?: import("../enums/activitypointer_deliveryprioritycode").activitypointer_deliveryprioritycode | null;
    description?: string | null;
    exchangeitemid?: string | null;
    exchangerate?: number | null;
    exchangeweblink?: string | null;
    from?: import("../../types/ActivityParty").ActivityParty[] | null;
    importsequencenumber?: number | null;
    instancetypecode?: import("../enums/opportunityclose__opportunityclose_instancetypecode").opportunityclose__opportunityclose_instancetypecode | null;
    isbilled?: boolean | null;
    ismapiprivate?: boolean | null;
    isregularactivity?: boolean | null;
    isworkflowcreated?: boolean | null;
    lastonholdtime?: Date | null;
    leftvoicemail?: boolean | null;
    modifiedby?: import("../../types/EntityReference").EntityReference | null;
    modifiedbyexternalparty?: import("../../types/EntityReference").EntityReference | null;
    modifiedbyexternalpartyname?: string | null;
    modifiedbyexternalpartyyominame?: string | null;
    modifiedbyname?: string | null;
    modifiedbyyominame?: string | null;
    modifiedon?: Date | null;
    modifiedonbehalfby?: import("../../types/EntityReference").EntityReference | null;
    modifiedonbehalfbyname?: string | null;
    modifiedonbehalfbyyominame?: string | null;
    onholdtime?: number | null;
    opportunityid?: import("../../types/EntityReference").EntityReference;
    opportunityidname?: string | null;
    opportunityidtype?: string | null;
    opportunitystatecode?: import("../enums/opportunityclose_opportunityclose_opportunity_statecode").opportunityclose_opportunityclose_opportunity_statecode | null;
    opportunitystatuscode?: import("../enums/opportunityclose_opportunityclose_opportunity_statuscode").opportunityclose_OpportunityClose_opportunity_statuscode | null;
    optionalattendees?: import("../../types/ActivityParty").ActivityParty[] | null;
    organizer?: import("../../types/ActivityParty").ActivityParty[] | null;
    overriddencreatedon?: Date | null;
    ownerid?: import("../../types/EntityReference").EntityReference | null;
    owneridname?: string | null;
    owneridtype?: string | null;
    owneridyominame?: string | null;
    owningbusinessunit?: import("../../types/EntityReference").EntityReference | null;
    owningbusinessunitname?: string | null;
    owningteam?: import("../../types/EntityReference").EntityReference | null;
    owninguser?: import("../../types/EntityReference").EntityReference | null;
    partners?: import("../../types/ActivityParty").ActivityParty[] | null;
    postponeactivityprocessinguntil?: Date | null;
    prioritycode?: import("../enums/opportunityclose__opportunityclose_prioritycode").opportunityclose__opportunityclose_prioritycode | null;
    processid?: import("../../types/Guid").Guid | null;
    regardingobjectid?: import("../../types/EntityReference").EntityReference | null;
    regardingobjectidname?: string | null;
    regardingobjectidyominame?: string | null;
    regardingobjecttypecode?: string | null;
    requiredattendees?: import("../../types/ActivityParty").ActivityParty[] | null;
    resources?: import("../../types/ActivityParty").ActivityParty[] | null;
    scheduleddurationminutes?: number | null;
    scheduledend?: Date | null;
    scheduledstart?: Date | null;
    sendermailboxid?: import("../../types/EntityReference").EntityReference | null;
    sendermailboxidname?: string | null;
    senton?: Date | null;
    seriesid?: import("../../types/Guid").Guid | null;
    serviceid?: import("../../types/EntityReference").EntityReference | null;
    serviceidname?: string | null;
    slaid?: import("../../types/EntityReference").EntityReference | null;
    slainvokedid?: import("../../types/EntityReference").EntityReference | null;
    slainvokedidname?: string | null;
    slaname?: string | null;
    sortdate?: Date | null;
    stageid?: import("../../types/Guid").Guid | null;
    statecode?: import("../enums/opportunityclose_opportunityclose_statecode").opportunityclose_opportunityclose_statecode | null;
    statuscode?: import("../enums/opportunityclose_opportunityclose_statuscode").opportunityclose_opportunityclose_statuscode | null;
    subcategory?: string | null;
    subject?: string | null;
    timezoneruleversionnumber?: number | null;
    to?: import("../../types/ActivityParty").ActivityParty[] | null;
    transactioncurrencyid?: import("../../types/EntityReference").EntityReference | null;
    transactioncurrencyidname?: string | null;
    traversedpath?: string | null;
    utcconversiontimezonecode?: number | null;
    versionnumber?: number | null;
}
