import { IEntity } from "../../types/IEntity";
export declare const queueMetadata: {
    typeName: string;
    logicalName: string;
    collectionName: string;
    primaryIdAttribute: string;
    attributeTypes: {
        entityimage_timestamp: string;
        exchangerate: string;
        importsequencenumber: string;
        numberofitems: string;
        numberofmembers: string;
        versionnumber: string;
        emailrouteraccessapproval: string;
        incomingemaildeliverymethod: string;
        incomingemailfilteringmethod: string;
        outgoingemaildeliverymethod: string;
        queuetypecode: string;
        queueviewtype: string;
        statecode: string;
        statuscode: string;
        createdon: string;
        modifiedon: string;
        overriddencreatedon: string;
    };
    navigation: {
        transactioncurrencyid: string[];
        primaryuserid: string[];
        owningbusinessunit: string[];
        ownerid: string[];
        organizationid: string[];
        modifiedonbehalfby: string[];
        modifiedby: string[];
        defaultmailbox: string[];
        createdonbehalfby: string[];
        createdby: string[];
        businessunitid: string[];
    };
};
export declare enum QueueAttributes {
    AllowEmailCredentials = "allowemailcredentials",
    BusinessUnitId = "businessunitid",
    BusinessUnitIdName = "businessunitidname",
    CreatedBy = "createdby",
    CreatedByName = "createdbyname",
    CreatedByYomiName = "createdbyyominame",
    CreatedOn = "createdon",
    CreatedOnBehalfBy = "createdonbehalfby",
    CreatedOnBehalfByName = "createdonbehalfbyname",
    CreatedOnBehalfByYomiName = "createdonbehalfbyyominame",
    DefaultMailbox = "defaultmailbox",
    DefaultMailboxName = "defaultmailboxname",
    Description = "description",
    EMailAddress = "emailaddress",
    EmailPassword = "emailpassword",
    EmailRouterAccessApproval = "emailrouteraccessapproval",
    EmailUsername = "emailusername",
    EntityImage = "entityimage",
    EntityImage_Timestamp = "entityimage_timestamp",
    EntityImage_URL = "entityimage_url",
    EntityImageId = "entityimageid",
    ExchangeRate = "exchangerate",
    IgnoreUnsolicitedEmail = "ignoreunsolicitedemail",
    ImportSequenceNumber = "importsequencenumber",
    IncomingEmailDeliveryMethod = "incomingemaildeliverymethod",
    IncomingEmailFilteringMethod = "incomingemailfilteringmethod",
    IsEmailAddressApprovedByO365Admin = "isemailaddressapprovedbyo365admin",
    IsFaxQueue = "isfaxqueue",
    ModifiedBy = "modifiedby",
    ModifiedByName = "modifiedbyname",
    ModifiedByYomiName = "modifiedbyyominame",
    ModifiedOn = "modifiedon",
    ModifiedOnBehalfBy = "modifiedonbehalfby",
    ModifiedOnBehalfByName = "modifiedonbehalfbyname",
    ModifiedOnBehalfByYomiName = "modifiedonbehalfbyyominame",
    Name = "name",
    NumberOfItems = "numberofitems",
    NumberOfMembers = "numberofmembers",
    OrganizationId = "organizationid",
    OrganizationIdName = "organizationidname",
    OutgoingEmailDeliveryMethod = "outgoingemaildeliverymethod",
    OverriddenCreatedOn = "overriddencreatedon",
    OwnerId = "ownerid",
    OwnerIdName = "owneridname",
    OwnerIdType = "owneridtype",
    OwnerIdYomiName = "owneridyominame",
    OwningBusinessUnit = "owningbusinessunit",
    OwningBusinessUnitName = "owningbusinessunitname",
    OwningTeam = "owningteam",
    OwningUser = "owninguser",
    PrimaryUserId = "primaryuserid",
    PrimaryUserIdName = "primaryuseridname",
    PrimaryUserIdYomiName = "primaryuseridyominame",
    QueueId = "queueid",
    QueueTypeCode = "queuetypecode",
    QueueViewType = "queueviewtype",
    StateCode = "statecode",
    StatusCode = "statuscode",
    TransactionCurrencyId = "transactioncurrencyid",
    TransactionCurrencyIdName = "transactioncurrencyidname",
    VersionNumber = "versionnumber"
}
export interface Queue extends IEntity {
    allowemailcredentials?: boolean | null;
    businessunitid?: import("../../types/EntityReference").EntityReference | null;
    businessunitidname?: string | null;
    createdby?: import("../../types/EntityReference").EntityReference | null;
    createdbyname?: string | null;
    createdbyyominame?: string | null;
    createdon?: Date | null;
    createdonbehalfby?: import("../../types/EntityReference").EntityReference | null;
    createdonbehalfbyname?: string | null;
    createdonbehalfbyyominame?: string | null;
    defaultmailbox?: import("../../types/EntityReference").EntityReference | null;
    defaultmailboxname?: string | null;
    description?: string | null;
    emailaddress?: string | null;
    emailpassword?: string | null;
    emailrouteraccessapproval?: import("../enums/queue_queue_emailrouteraccessapproval").queue_queue_emailrouteraccessapproval | null;
    emailusername?: string | null;
    entityimage?: string | null;
    entityimage_timestamp?: number | null;
    entityimage_url?: string | null;
    entityimageid?: import("../../types/Guid").Guid | null;
    exchangerate?: number | null;
    ignoreunsolicitedemail?: boolean | null;
    importsequencenumber?: number | null;
    incomingemaildeliverymethod?: import("../enums/queue_queue_incomingemaildeliverymethod").queue_queue_incomingemaildeliverymethod | null;
    incomingemailfilteringmethod?: import("../enums/queue_queue_incomingemailfilteringmethod").queue_queue_incomingemailfilteringmethod | null;
    isemailaddressapprovedbyo365admin?: boolean | null;
    isfaxqueue?: boolean | null;
    modifiedby?: import("../../types/EntityReference").EntityReference | null;
    modifiedbyname?: string | null;
    modifiedbyyominame?: string | null;
    modifiedon?: Date | null;
    modifiedonbehalfby?: import("../../types/EntityReference").EntityReference | null;
    modifiedonbehalfbyname?: string | null;
    modifiedonbehalfbyyominame?: string | null;
    name?: string;
    numberofitems?: number | null;
    numberofmembers?: number | null;
    organizationid?: import("../../types/EntityReference").EntityReference | null;
    organizationidname?: string | null;
    outgoingemaildeliverymethod?: import("../enums/queue_queue_outgoingemaildeliverymethod").queue_queue_outgoingemaildeliverymethod | null;
    overriddencreatedon?: Date | null;
    ownerid?: import("../../types/EntityReference").EntityReference | null;
    owneridname?: string | null;
    owneridtype?: string | null;
    owneridyominame?: string | null;
    owningbusinessunit?: import("../../types/EntityReference").EntityReference | null;
    owningbusinessunitname?: string | null;
    owningteam?: import("../../types/EntityReference").EntityReference | null;
    owninguser?: import("../../types/EntityReference").EntityReference | null;
    primaryuserid?: import("../../types/EntityReference").EntityReference | null;
    primaryuseridname?: string | null;
    primaryuseridyominame?: string | null;
    queueid?: import("../../types/Guid").Guid | null;
    queuetypecode?: import("../enums/queue_queue_queuetypecode").queue_queue_queuetypecode | null;
    queueviewtype?: import("../enums/queue_queue_queueviewtype").queue_queue_queueviewtype | null;
    statecode?: import("../enums/queue_queue_statecode").queue_queue_statecode | null;
    statuscode?: import("../enums/queue_queue_statuscode").queue_queue_statuscode | null;
    transactioncurrencyid?: import("../../types/EntityReference").EntityReference | null;
    transactioncurrencyidname?: string | null;
    versionnumber?: number | null;
}
